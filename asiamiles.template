{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc-asiamiles": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "asiamiles"
          }
        ]
      }
    },
    "subnet069fed62721210555": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-west-2c",
        "VpcId": {
          "Ref": "vpc-asiamiles"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private subnet"
          }
        ]
      }
    },
    "igw08bf5a9206abf2c3a": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt71c2f008": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl075e9023b8fceb865": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-asiamiles"
        }
      }
    },
    "rtb0ad4cc06c2187db76": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-asiamiles"
        }
      }
    },
    "rtb0c1df43037ec6c2a3": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-asiamiles"
        }
      }
    },
    "eip547124336": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "instance-private": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-e251209a",
        "InstanceType": "t2.micro",
        "KeyName": "asiamiles",
        "Monitoring": "false",
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet069fed62721210555"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.231",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgPrivateSubnetSG"
              }
            ]
          }
        ]
      }
    },
    "instance-webserver": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-e251209a",
        "InstanceType": "t2.micro",
        "KeyName": "asiamiles",
        "Monitoring": "false",
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": "subnet-074815bb3d20569d6",
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.0.163",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgWebserverSG"
              }
            ]
          }
        ]
      }
    },
    "sgPrivateSubnetSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "private subnet access",
        "VpcId": {
          "Ref": "vpc-asiamiles"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "asiamiles"
          }
        ]
      }
    },
    "sgWebserverSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "web server access",
        "VpcId": {
          "Ref": "vpc-asiamiles"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "asiamiles"
          }
        ]
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "s3policyawsopsworkscmchefvpcdemo5k7b848jsg9c": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": "aws-opsworks-cm-chef-vpc-demo-5k7b848jsg9c",
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Effect": "Deny",
              "NotPrincipal": {
                "AWS": [
                  "arn:aws:sts::854534044489:assumed-role/aws-opsworks-cm-service-role/OpsWorksCM",
                  "arn:aws:iam::854534044489:role/service-role/aws-opsworks-cm-service-role"
                ]
              },
              "Action": "s3:DeleteBucket",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "aws-opsworks-cm-chef-vpc-demo-",
                    "5k7b848jsg9c"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl075e9023b8fceb865"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl075e9023b8fceb865"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl075e9023b8fceb865"
        },
        "SubnetId": "subnet-074815bb3d20569d6"
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl075e9023b8fceb865"
        },
        "SubnetId": {
          "Ref": "subnet069fed62721210555"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-asiamiles"
        },
        "InternetGatewayId": {
          "Ref": "igw08bf5a9206abf2c3a"
        }
      }
    },
    "subnetroute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb0ad4cc06c2187db76"
        },
        "SubnetId": "subnet-074815bb3d20569d6"
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb0ad4cc06c2187db76"
        },
        "GatewayId": {
          "Ref": "igw08bf5a9206abf2c3a"
        }
      },
      "DependsOn": "gw1"
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb0c1df43037ec6c2a3"
        }
      }
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-asiamiles"
        },
        "DhcpOptionsId": {
          "Ref": "dopt71c2f008"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateSubnetSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgWebserverSG"
        },
        "SourceSecurityGroupOwnerId": "854534044489"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateSubnetSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "192.30.252.0/22"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserverSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserverSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.0.0.0/24"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserverSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.0.0.0/24"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserverSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateSubnetSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserverSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserverSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "DestinationSecurityGroupId": {
          "Ref": "sgPrivateSubnetSG"
        }
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWebserverSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "Asiamiles Infrastructure"
}